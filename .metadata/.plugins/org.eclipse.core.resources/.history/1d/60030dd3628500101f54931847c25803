package V1;

import java.util.Arrays;
import java.util.Vector;

public class SubArraySort9 {

	public static void main(String[] args) {
		int arr[] = { 1, 2, 3, 4, 5, 8, 6, 7, 9, 10 };
		System.out.println(SubArraySort(arr));
	}
	//it will take O(nlogn) due to sorting
	//and Sc=o(n) due to copy the element in new arrays
	public static Vector<Integer> SubArraySort(int arr[]) {
		int arr1[] = Arrays.copyOf(arr, arr.length);
		Arrays.sort(arr1);
		Vector<Integer> c = new Vector<Integer>();
		int start = -1;
		int end = -1;
		for (int i = 0; i < arr.length; i++) {
			if (arr[i] != arr1[i]) {
				if (start == -1) {
					start = i;
				}
				end = i;
			}
		}
		c.add(start);
		c.add(end);
		return c;
	}
}
